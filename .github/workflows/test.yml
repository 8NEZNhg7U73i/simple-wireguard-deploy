
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

env:
  SSH_ACTIONS: false
  moon: true

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Install wireguard
      run: sudo apt-get install wireguard

    - name: Install zerotier one
      run: curl -s https://install.zerotier.com | sudo bash

    - name: join network Id
      run: sudo zerotier-cli join ${{ secrets.NETWORK_ID }}

    - name: orbit moon
      if: env.moon == 'true'
      run: sudo zerotier-cli orbit ${{ secrets.MOON_ID }} ${{ secrets.MOON_ID }}

    - name: Update system
      run: |
        sudo -E apt update
        sudo -E apt full-upgrade

    - name: Create wireguard tunnel configuration
      run: |
        sed -i -e "s@{{WIREGUARD_PRIVATE_KEY}}@${{ secrets.WIREGUARD_PRIVATE_KEY }}@" $GITHUB_WORKSPACE/tunnel.conf
        sed -i -e "s@{{WIREGUARD_SERVER_PUBLIC_KEY}}@${{ secrets.WIREGUARD_SERVER_PUBLIC_KEY }}@" $GITHUB_WORKSPACE/tunnel.conf
        #sed -i -e "s@{{WIREGUARD_PRESHARED_KEY}}@${{ secrets.WIREGUARD_PRESHARED_KEY }}@" $GITHUB_WORKSPACE/tunnel.conf
        sed -i -e "s@{{WIREGUARD_SERVER_ENDPOINT}}@${{ secrets.WIREGUARD_SERVER_ENDPOINT }}@" $GITHUB_WORKSPACE/tunnel.conf
        sed -i -e "s@{{WIREGUARD_ADDRESS}}@${{ secrets.WIREGUARD_ADDRESS }}@" $GITHUB_WORKSPACE/tunnel.conf
        sed -i -e "s@{{WIREGUARD_ALLOWEDIPS}}@${{ secrets.WIREGUARD_ALLOWEDIPS }}@" $GITHUB_WORKSPACE/tunnel.conf
        sudo cp $GITHUB_WORKSPACE/tunnel.conf /etc/wireguard/

    - name: Connect wireguard
      run: |
        wg-quick up tunnel
        #wg-quick down tunnel
    - name: wireguard automate
      run: |
        sudo systemctl enable wg-quick@tunnel
        
    - name: check /root/.ssh directory
      run: |
        if [ ! /root  ]; then sudo mkdir /root; fi
        if [ ! /root/.ssh ]; then sudo mkdir /root/.ssh; fi

    - name: sshd public add and fix permission
      run: |
        echo ${{ secrets.SSH_PUBLIC_KEY }} | sudo tee -a /root/.ssh/authorized_keys
        sudo chmod 0600 /root/.ssh/authorized_keys

    - name: Fixup home directory permissions
      run: |
        sudo chown runner:runner /home/runner
        sudo chmod o-rwx -R /home/runner
        sudo chmod g-rwx -R /home/runner

    - name: Fixup root directory permissions
      run: |
        sudo chown root:root /root
        sudo chmod o-rwx -R /root
        sudo chmod g-rwx -R /root

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@main
      if: env.SSH_ACTIONS == 'true'

    - name: run machine by tail
      if: env.SSH_ACTIONS == 'false'
      run: |
        df -m
        sudo cp $(which tail)  /run/tail
        sudo /run/tail -f /dev/null

